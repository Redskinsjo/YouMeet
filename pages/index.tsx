import React from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useDispatch } from 'react-redux'
import { useEffect, useState } from 'react'
import { useQuery } from '@apollo/client'
import { useAuth0 } from '@auth0/auth0-react'

import Header from '@/components/header'
import MapboxMap from '@/components/mapbox-map'
import EmployeesList from '@/components/employees-list'
import SuggestedMeets from '@/components/suggested-meets'
import Footer from '@/components/footer'
import Search from '@/components/search'
import {
  setEmployees,
  fetchingEmployees,
} from '@/redux/features/employeesSlice'
import { GetEmployeesDocument } from '../generated'

const Home: NextPage = () => {
  const { data, refetch } = useQuery(GetEmployeesDocument, {
    variables: { filter: '', sort: 2 },
    nextFetchPolicy: 'cache-first',
  })
  const dispatch = useDispatch()
  const { user, isAuthenticated } = useAuth0()

  // local state
  const [search, setSearch] = useState('')
  const handleChangeSearch = (e: React.ChangeEvent<HTMLInputElement>) =>
    setSearch(e.target.value)
  const [criteria, setCriteria] = useState<number>(2)
  const handleChangeCriteria = (e: React.ChangeEvent<HTMLInputElement>) =>
    setCriteria(Number(e.target.value))

  useEffect(() => {
    const fetchData = async () => {
      dispatch(fetchingEmployees())
      const empl = await refetch({
        filter: search,
        sort: criteria,
      })
      dispatch(setEmployees(empl.data.employees))
    }
    fetchData()
  }, [criteria, search])

  return (
    <div className="w-full">
      <Header />
      {isAuthenticated && user && (
        <div className="h-full">
          <Head>
            <title>YouMeet</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/logo-favicon.png" />
          </Head>
          <div
            className="w-full flex justify-center mt-16"
            style={{ background: 'linear-gradient(rgba(0,0,0,0.1),#FFF)' }}
          >
            <MapboxMap
              center={[3, 33]}
              zoom={1.5}
              employees={data?.employees}
              styles={{
                width: '80%',
                minHeight: '800px',
                margin: 20,
                borderRadius: 20,
                border: '1px solid black',
              }}
            />
          </div>
          <EmployeesList data={data} />

          <div className="h-[80px] flex justify-center items-center">
            <Search
              search={search}
              handleChangeSearch={handleChangeSearch}
              criteria={criteria}
              handleChangeCriteria={handleChangeCriteria}
            />
          </div>
          <SuggestedMeets data={data} />
          <Footer />
        </div>
      )}
    </div>
  )
}

export default Home
